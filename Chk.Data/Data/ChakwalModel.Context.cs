//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Chakwal.Data.Data
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class CHK_InventoryEntities : DbContext
    {
        public CHK_InventoryEntities()
            : base("name=CHK_InventoryEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<C__MigrationHistory> C__MigrationHistory { get; set; }
        public virtual DbSet<AspNetRole> AspNetRoles { get; set; }
        public virtual DbSet<AspNetUserClaim> AspNetUserClaims { get; set; }
        public virtual DbSet<AspNetUserLogin> AspNetUserLogins { get; set; }
        public virtual DbSet<AspNetUser> AspNetUsers { get; set; }
        public virtual DbSet<Company> Companies { get; set; }
        public virtual DbSet<CompanyLocation> CompanyLocations { get; set; }
        public virtual DbSet<ErrorLog> ErrorLogs { get; set; }
        public virtual DbSet<Item> Items { get; set; }
        public virtual DbSet<ItemBuy> ItemBuys { get; set; }
        public virtual DbSet<ItemUsed> ItemUseds { get; set; }
        public virtual DbSet<LoginHistory> LoginHistories { get; set; }
        public virtual DbSet<Product> Products { get; set; }
        public virtual DbSet<Production> Productions { get; set; }
        public virtual DbSet<ProductMade> ProductMades { get; set; }
        public virtual DbSet<Role> Roles { get; set; }
        public virtual DbSet<StockInItem> StockInItems { get; set; }
        public virtual DbSet<StockInProduct> StockInProducts { get; set; }
        public virtual DbSet<StockOut> StockOuts { get; set; }
        public virtual DbSet<Team> Teams { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<Vendor> Vendors { get; set; }
        public virtual DbSet<Bill> Bills { get; set; }
    
        public virtual ObjectResult<SP_StockIn_Result> SP_StockIn(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> product)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var productParameter = product.HasValue ?
                new ObjectParameter("Product", product) :
                new ObjectParameter("Product", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_StockIn_Result>("SP_StockIn", fromDateParameter, toDateParameter, productParameter);
        }
    
        public virtual ObjectResult<SP_StockOut_Result> SP_StockOut(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_StockOut_Result>("SP_StockOut", fromDateParameter, toDateParameter);
        }
    }
}
